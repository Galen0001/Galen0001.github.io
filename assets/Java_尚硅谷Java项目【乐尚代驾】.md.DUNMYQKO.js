import{_ as i,c as a,o,ag as e}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"尚硅谷Java项目【乐尚代驾】","description":"","frontmatter":{},"headers":[],"relativePath":"Java/尚硅谷Java项目【乐尚代驾】.md","filePath":"Java/尚硅谷Java项目【乐尚代驾】.md","lastUpdated":null}'),r={name:"Java/尚硅谷Java项目【乐尚代驾】.md"};function t(p,l,n,s,_,d){return o(),a("div",null,l[0]||(l[0]=[e('<h1 id="尚硅谷java项目【乐尚代驾】" tabindex="-1">尚硅谷Java项目【乐尚代驾】 <a class="header-anchor" href="#尚硅谷java项目【乐尚代驾】" aria-label="Permalink to &quot;尚硅谷Java项目【乐尚代驾】&quot;">​</a></h1><blockquote><p>只记录部分逻辑，不记代码</p><p>视频地址：<a href="https://www.bilibili.com/video/BV1nW421R7qJ" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1nW421R7qJ</a></p></blockquote><h1 id="_1、微信小程序" tabindex="-1">1、微信小程序 <a class="header-anchor" href="#_1、微信小程序" aria-label="Permalink to &quot;1、微信小程序&quot;">​</a></h1><h2 id="_1、乘客端" tabindex="-1">1、乘客端 <a class="header-anchor" href="#_1、乘客端" aria-label="Permalink to &quot;1、乘客端&quot;">​</a></h2><ol><li><p>注册微信小程序</p></li><li><p>下载微信开发工具</p></li><li><p>申请对接的位置接口权限</p></li><li><p>通过微信登录时，获取用户的openId及电话号码来注册登录</p></li><li><p>登录后展示对应的个人信息及历史数据。</p></li><li><p>开始预下单，展示预估订单的费用，预估驾驶线路</p><ol><li>技术点：规则引擎 Drools，根据不同条件设置不同的值。</li><li>订单超时：使用MQ死信，或者 redisson 阻塞队列。</li></ol></li><li><p>下单前，估计订单费用，确认下单，开始创建订单，重新估计订单费用，添加乘客位置。</p><ol><li>技术点：redis 的 GEO功能，GEOADD，添加经纬度。</li></ol></li><li><p>搜索附近可接单司机，把符合条件的司机放在队列里，司机已接单，等待过来。确认司机 ，已上车。</p><ol><li>技术点：xxl-job，任务调度。定时查询可接单司机</li></ol></li><li></li></ol><h2 id="_2、司机端" tabindex="-1">2、司机端 <a class="header-anchor" href="#_2、司机端" aria-label="Permalink to &quot;2、司机端&quot;">​</a></h2><ol><li>通过微信登录时，获取用户的openId及电话号码来注册登录</li><li>在开启接单前，需要判断是否实名认证及人脸认证 <ol><li>技术点：腾讯人脸模型</li><li>图片可以使用，万象服务的自动审核。</li></ol></li><li>开启接单，上传实时当前位置，查找乘客，查看预估费用 <ol><li>技术点：redis 的 GEO功能，查询多少公里内的经纬度。</li></ol></li><li>司机抢单后，更新接单状态，并实时上传位置，前往指定地点接乘客，确认乘客，确认已上车。 <ol><li>技术点：xxl-job，任务调度。定时查询可接订单。</li><li>抢单时，需要注意并发事务的处理。使用redisson</li><li>保存实时数据，需要用到，MongoDb保存</li><li>上传文件使用minio。</li><li>录音文件转文本同时保存。</li></ol></li><li>根据不同的时间段路途高速费各种规则来计算费用。 <ol><li><strong>Drools</strong>：基于Java的开源规则引擎，</li></ol></li><li>订单结束后，需要把订单放在账单表里。同时还需要记录分账数据。 <ol><li>使用 CompletableFuture 异步编程快速获取对应的数据。</li></ol></li></ol><hr><h1 id="总结" tabindex="-1">总结： <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结：&quot;">​</a></h1><p>Spring boot + spring cloud</p><p>Mybatis plus</p><p>redis</p><p>规则引擎 Drools</p><p>分页式锁</p><p>分页式事务</p><p>RabbitMQ</p><p>多线程</p><p>任务调度 xxl-job</p>',18)]))}const b=i(r,[["render",t]]);export{c as __pageData,b as default};
